install.packages('htmlwidgets')
install.packages("htmlwidgets")
library('htmlwidgets')
install.packages('htmlwidgets')
library(htmlwidgets)
install.packages(c("backports", "data.table", "emmeans", "jsonlite", "segmented"))
library('htmlwidgets')
## hop source data
# read in hop source data
hop_source17 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/prosser_lab_2017.xlsx", na = c(".", NA))
hop_source18 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2018.xlsx", na = c(".", NA))
hop_source19 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2019.xlsx", na = c(".", NA))
hop_source20 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2020.xlsx", na = c(".", NA))
library("tidyr")
library('viridis')
library('plotly')
library('htmlwidgets')
library(readxl)
folder <- c("/Users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/2020 Field Notes/")
## hop source data
# read in hop source data
hop_source17 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/prosser_lab_2017.xlsx", na = c(".", NA))
hop_source18 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2018.xlsx", na = c(".", NA))
hop_source19 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2019.xlsx", na = c(".", NA))
hop_source20 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2020.xlsx", na = c(".", NA))
# modify the dataframes so they fit together
# hop source 2017
hop_source17 <- hop_source17 %>%
dplyr::select(genotype, sensory_rank, source) %>%
mutate(year = "2017",
category = NA,
hedonic_score = NA) %>%
filter(! is.na(sensory_rank)) %>%
arrange(sensory_rank) %>%
mutate(rank = row_number()) %>%
dplyr::select(genotype, source, year, rank, category, hedonic_score)
# hop source 2018
hop_source18 <- hop_source18 %>%
mutate(year = "2018",
hedonic_score = NA) %>%
select(genotype, source, year, rank, category, hedonic_score)
# hop source 2019
hop_source19 <- hop_source19 %>%
select(genotype, source, year, rank, category, hedonic_score)
library(dplyr)
## hop source data
# read in hop source data
hop_source17 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/prosser_lab_2017.xlsx", na = c(".", NA))
hop_source18 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2018.xlsx", na = c(".", NA))
hop_source19 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2019.xlsx", na = c(".", NA))
hop_source20 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2020.xlsx", na = c(".", NA))
# modify the dataframes so they fit together
# hop source 2017
hop_source17 <- hop_source17 %>%
dplyr::select(genotype, sensory_rank, source) %>%
mutate(year = "2017",
category = NA,
hedonic_score = NA) %>%
filter(! is.na(sensory_rank)) %>%
arrange(sensory_rank) %>%
mutate(rank = row_number()) %>%
dplyr::select(genotype, source, year, rank, category, hedonic_score)
# hop source 2018
hop_source18 <- hop_source18 %>%
mutate(year = "2018",
hedonic_score = NA) %>%
select(genotype, source, year, rank, category, hedonic_score)
# hop source 2019
hop_source19 <- hop_source19 %>%
select(genotype, source, year, rank, category, hedonic_score)
# hop source 2020
head(hop_source20)
hop_source20 <- hop_source20 %>%
mutate(year = "2020") %>%
arrange(-hedonic_score) %>%
mutate(rank = row_number(),
category = NA) %>%
select(genotype, source, year, rank, category, hedonic_score)
### rbind them together
hop_source <- rbind(hop_source17, hop_source18, hop_source19, hop_source20)
#View(hop_source %>% group_by(genotype) %>% tally() %>% arrange(-n))
hop_source$category
# calculate the top half for each year, eliminating NAs and OGs
ranks <- hop_source %>%
filter(! is.na(rank)) %>%
filter(category %in% c(NA, "Woody, Earthy, Herbal, Grassy", "Stone Fruit, Citrus, Tropical & Floral")) %>% # eliminate OGs
group_by(year) %>%
summarise(min = min(rank),
max = max(rank),
median = median(rank))
hop_source %>% group_by(year) %>% tally()
# 50% selection pressure
hop_source17_selected <- hop_source %>% filter(year == 2017) %>% filter(rank < (50*.50))
hop_source18_selected <- hop_source %>% filter(year == 2018) %>% filter(category != "Onion, Garlic") %>% group_by(category) %>% filter(rank < (23*.50))
hop_source19_selected <- hop_source %>% filter(year == 2019) %>% filter(category != "Onion, Garlic") %>% group_by(category) %>% filter(rank < (47*.50))
hop_source20_selected <- hop_source %>% filter(year == 2020) %>% filter(rank < (66*.50))
hop_source_selected <- bind_rows(hop_source17_selected, hop_source18_selected, hop_source19_selected, hop_source20_selected)
# only lines from WA or USDA
hop_source_usda <- hop_source %>% filter(source %in% c("USDA_Prosser", "USDA_Corvallis"))
head(hop_source)
plot <- ggplot(data = hop_source_usda, aes(x = year, y = rank, group = genotype,
text = paste(
"Rank: ", round(rank,1), "\n",
"Genotype: ", genotype, "\n",
sep = ""
))) +
geom_point(aes(fill = as.factor(genotype)), pch = 21,
size = 3) +
geom_line(aes(x = year, y = rank)) +
LSP_theme() +
theme(legend.position = "none") +
scale_color_viridis(discrete = FALSE, option = "magma") +
scale_fill_viridis(discrete = FALSE, option = "magma") +
scale_y_reverse()
ggplotly(plot, tooltip = "text")
library('plotly')
## hop source data
# read in hop source data
hop_source17 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/prosser_lab_2017.xlsx", na = c(".", NA))
hop_source18 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2018.xlsx", na = c(".", NA))
hop_source19 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2019.xlsx", na = c(".", NA))
hop_source20 <- read_excel("/users/kayla.altendorf/OneDrive - USDA/Documents/2020/Hop Germplasm Data/Breeding Program Data Prior to My Arrival/Formatted files for R/hop_source_2020.xlsx", na = c(".", NA))
# modify the dataframes so they fit together
# hop source 2017
hop_source17 <- hop_source17 %>%
dplyr::select(genotype, sensory_rank, source) %>%
mutate(year = "2017",
category = NA,
hedonic_score = NA) %>%
filter(! is.na(sensory_rank)) %>%
arrange(sensory_rank) %>%
mutate(rank = row_number()) %>%
dplyr::select(genotype, source, year, rank, category, hedonic_score)
# hop source 2018
hop_source18 <- hop_source18 %>%
mutate(year = "2018",
hedonic_score = NA) %>%
select(genotype, source, year, rank, category, hedonic_score)
# hop source 2019
hop_source19 <- hop_source19 %>%
select(genotype, source, year, rank, category, hedonic_score)
# hop source 2020
head(hop_source20)
hop_source20 <- hop_source20 %>%
mutate(year = "2020") %>%
arrange(-hedonic_score) %>%
mutate(rank = row_number(),
category = NA) %>%
select(genotype, source, year, rank, category, hedonic_score)
### rbind them together
hop_source <- rbind(hop_source17, hop_source18, hop_source19, hop_source20)
#View(hop_source %>% group_by(genotype) %>% tally() %>% arrange(-n))
hop_source$category
# calculate the top half for each year, eliminating NAs and OGs
ranks <- hop_source %>%
filter(! is.na(rank)) %>%
filter(category %in% c(NA, "Woody, Earthy, Herbal, Grassy", "Stone Fruit, Citrus, Tropical & Floral")) %>% # eliminate OGs
group_by(year) %>%
summarise(min = min(rank),
max = max(rank),
median = median(rank))
hop_source %>% group_by(year) %>% tally()
# 50% selection pressure
hop_source17_selected <- hop_source %>% filter(year == 2017) %>% filter(rank < (50*.50))
hop_source18_selected <- hop_source %>% filter(year == 2018) %>% filter(category != "Onion, Garlic") %>% group_by(category) %>% filter(rank < (23*.50))
hop_source19_selected <- hop_source %>% filter(year == 2019) %>% filter(category != "Onion, Garlic") %>% group_by(category) %>% filter(rank < (47*.50))
hop_source20_selected <- hop_source %>% filter(year == 2020) %>% filter(rank < (66*.50))
hop_source_selected <- bind_rows(hop_source17_selected, hop_source18_selected, hop_source19_selected, hop_source20_selected)
# only lines from WA or USDA
hop_source_usda <- hop_source %>% filter(source %in% c("USDA_Prosser", "USDA_Corvallis"))
head(hop_source)
plot <- ggplot(data = hop_source_usda, aes(x = year, y = rank, group = genotype,
text = paste(
"Rank: ", round(rank,1), "\n",
"Genotype: ", genotype, "\n",
sep = ""
))) +
geom_point(aes(fill = as.factor(genotype)), pch = 21,
size = 3) +
geom_line(aes(x = year, y = rank)) +
LSP_theme() +
theme(legend.position = "none") +
scale_color_viridis(discrete = FALSE, option = "magma") +
scale_fill_viridis(discrete = FALSE, option = "magma") +
scale_y_reverse()
plot <- ggplot(data = hop_source_usda, aes(x = year, y = rank, group = genotype,
text = paste(
"Genotype: ", genotype, "\n",
"Rank: ", rank, "\n",
sep = ""
))) +
geom_point(aes(color = genotype)) +
geom_line(aes(color = genotype, linetype = source)) +
scale_y_reverse() +
guides(color = FALSE) +
scale_color_viridis(discrete = TRUE, option = "magma") +
scale_linetype_manual(values = c("dashed", "solid")) +
theme_bw()
ggplotly(plot, tooltip = "text")
library(plotly)
ggplotly(plot, tooltip = "text")
library("plotly")
library(htmlwidgets)
remove.packages("htmlwidgets", lib="~/Library/R/4.0/library")
library("plotly")
plot <- ggplot(data = hop_source_usda, aes(x = year, y = rank, group = genotype,
text = paste(
"Genotype: ", genotype, "\n",
"Rank: ", rank, "\n",
sep = ""
))) +
geom_point(aes(color = genotype)) +
geom_line(aes(color = genotype, linetype = source)) +
scale_y_reverse() +
guides(color = FALSE) +
scale_color_viridis(discrete = TRUE, option = "magma") +
scale_linetype_manual(values = c("dashed", "solid")) +
theme_bw()
ggplotly(plot, tooltip = "text")
library(plotly)
remove.packages("plotly", lib="~/Library/R/4.0/library")
install.packages("plotly")
library("plotly")
